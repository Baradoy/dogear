name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  buildAndTest:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: [1.14.3]
        otp: [25.3]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Elixir
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}
      - name: Cache deps
        id: cache-deps
        uses: actions/cache@v3
        env:
          cache-name: cache-elixir-deps
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{matrix.otp}}-${{matrix.elixir}}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-${{matrix.otp}}-${{matrix.elixir}}-
      - name: Cache compiled build
        id: cache-build
        uses: actions/cache@v3
        env:
          cache-name: cache-compiled-build
        with:
          path: _build
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{matrix.otp}}-${{matrix.elixir}}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-${{matrix.otp}}-${{matrix.elixir}}-
            ${{ runner.os }}-mix-${{ env.cache-name }}-
      - name: Cache plts
        id: cache-plts
        uses: actions/cache@v3
        env:
          cache-name: cache-dializer-plts
        with:
          path: priv/plts
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{matrix.otp}}-${{matrix.elixir}}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-${{matrix.otp}}-${{matrix.elixir}}-
            ${{ runner.os }}-mix-${{ env.cache-name }}-
      - name: Install dependencies
        run: mix deps.get && mix deps.unlock --check-unused
      - name: Compile
        run: mix deps.compile --warnings-as-errors
      - name: Run test
        run: mix test
      - name: Check Formatting
        run: mix format --check-formatted
      - name: Run Tests
        run: mix test
      - name: Dialyzer
        run: mix dialyzer --format github
      - name: Check Credo
        run: mix credo
